//Se incluyen las librerías para la pantalla y la microSD
#include <Adafruit_GFX.h>
#include <Adafruit_ILI9341.h>
#include <SPI.h>
#include <SD.h>

//Pines para la pantalla ILI9341
#define TFT_CS    5
#define TFT_DC    4
#define TFT_RST   6

//Pin para la SD
#define SD_CS     10

//Se definen los pines en la pantalla
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_RST);

/////////////////SETUP/////////////////
void setup() {
  Serial.begin(115200);

  //Se comienza la comunicación con la pantalla
  tft.begin();
  tft.setRotation(1);

  //Se pone el cursor donde se desea y se imprime sólo una vez que viene el menú de opciones
  tft.fillScreen(ILI9341_BLACK);
  tft.setCursor(20, 20);
  tft.setTextSize(2);
  tft.setTextColor(ILI9341_WHITE);
  tft.print("Menu de Opciones");

  //Luego se revisa si la SD está disponible y si si se imprime que está lista para usarse.
  if (SD.begin(SD_CS)) {
    Serial.println("Tarjeta SD lista");
  } else {
    Serial.println("fallo de la tarjeta SD!");
  }

  //Se limpia la pantalla
  delay(2000);
  tft.fillScreen(ILI9341_BLACK);
}

////////////////////////LOOP//////////////////////////////
void loop() {
  //Se le despliegan al usuario su 5 opciones
  tft.setCursor(20, 20);
  tft.setTextSize(2);
  tft.setTextColor(ILI9341_WHITE);
  tft.print("Seleccionar Opcion:");
  
  //Primera imagen
  tft.setCursor(20, 60);
  tft.print("1. Imagen 1");

  //Segunda imagen
  tft.setCursor(20, 90);
  tft.print("2. Imagen 2");

  //Tercera imagen
  tft.setCursor(20, 120);
  tft.print("3. Imagen 3");

  //Imagen guardad por el usuario
  tft.setCursor(20, 150);
  tft.print("4. Imagen 4");

  //Opción para guardar nueva imagen
  tft.setCursor(20, 180);
  tft.print("5. Editar imagen 4");

  //Se elige la opción escribiendo el número en el monitor serial
  if (Serial.available()) {
    int choice = Serial.parseInt();

    //Se cambia de estado dependiendo de que número se presiona.
    switch (choice) {

      //Para los casos 1 al 4 se llama a la función "executeOpction"
      case 1:
        executeOption("option1.txt");
        break;

      case 2:
        executeOption("option2.txt");
        break;

      case 3:
        executeOption("option3.txt");
        break;

      case 4:
        executeOption("option4.txt");
        break;

      //Para el caso 5 se ejecuta la función "uploadUserText"
      case 5:
        uploadUserText("option4.txt");
        break;
    }
  }
  delay(100);
}

//La función executeOption imprime en la pantalla la imagen guardada en el archivo que se le ingresa cuando la mandamos a llamar.
void executeOption(const char *filename) {
  tft.fillScreen(ILI9341_BLACK);

  File file = SD.open(filename);
  if (file) {
    int x = 0; // Posición inicial en X para el texto
    int y = 0; // Posición inicial en Y para el texto
    int lineHeight = 20; // Altura de cada línea

    while (file.available()) {
      char c = file.read();

      if (c == '\n') {
        // Moverse a la siguiente línea
        x = 20; // Resetear la posición X
        y += lineHeight;
      } else {
        // Escribir el caracter en la pantalla
        tft.setCursor(x, y);
        tft.print(c);

        // Moverse a la siguiente posición
        x += tft.getCursorX() - x;
      }
    }

    file.close();

    //Si no se encuentra el archivo imprimir que hubo un error abriendo el archivo
  } else {
    tft.setCursor(20, 20);
    tft.setTextSize(2);
    tft.setTextColor(ILI9341_WHITE);
    tft.print("Error abriendo archivo.");
  }

  //Regresar al menú principal si se presiona el 0
  while (true) {
    if (Serial.available()) {
      char backOption = Serial.read();
      if (backOption == '0') {
        tft.fillScreen(ILI9341_BLACK);
        break;
      }
    }
    delay(100);
  }
}

//Función para subir texto a un archivo de la SD desde el código, se usa para subir el texto ingresado por el usuario
void uploadTextFile(const char *filename, const char *content) {
  File file = SD.open(filename, FILE_WRITE);
  if (file) {
    file.print(content);
    file.close();
    Serial.println(filename + String(" Archivo subido exitosamente."));
  } else {
    Serial.println("Error al abrir el archivo.");
  }
}

//Función para leer el texto que manda el usuario y subirlo al archivo de texto de la imagen 4
void uploadUserText(const char *filename) {
  tft.fillScreen(ILI9341_BLACK);

  Serial.println("Ingresar el texto de la imagen 4 (Escribir '0' al terminar):");

  // Leer lo que sube el usuario hasta que se detecta un 0
  String userText = "";
  while (true) {
    if (Serial.available() > 0) {
      char c = Serial.read();
      if (c == '0') {
        break; // Salir del loop cuando se presiona el 0
      } else {
        userText += c;
      }
    }
    delay(100);
  }

  //Llamar a la función anterior para subir el texto al archivo
  uploadTextFile(filename, userText.c_str());
}

